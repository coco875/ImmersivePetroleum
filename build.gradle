buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://maven.parchmentmc.org' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.parchmentmc:librarian:1.+'
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
// sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '17'
//----------------------------------------------------------------------------------------------------------------------
java.toolchain.languageVersion = JavaLanguageVersion.of(17)
version = '4.2.0-22'
group = 'flaxbeard.immersivepetroleum'
archivesBaseName = "ImmersivePetroleum-${version_minecraft}"

sourceSets {
	main {
		resources {
			srcDirs = [
				"$rootDir/src/main/resources",
				"$rootDir/src/generated/resources"
			]
		}
	}
	datagen {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
		compileClasspath += main.output
		runtimeClasspath += main.output
	}
}

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
	mappings channel: 'parchment', version: version_parchment

	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	
	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', ''
			property 'forge.logging.console.level', 'info'
			property 'fml.earlyprogresswindow', 'false'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
			mods {
				immersivepetroleum {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')
			property 'forge.logging.markers', ''
			property 'forge.logging.console.level', 'info'
			property 'fml.earlyprogresswindow', 'false'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
			
			arg '-nogui'
			
			mods {
				immersivepetroleum {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')
			property 'forge.logging.markers', ''
			property 'forge.logging.console.level', 'info'
			property 'fml.earlyprogresswindow', 'false'
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
			
			args '--mod', 'immersivepetroleum',
				 '--all',
				 '--output', file('src/generated/resources/'),
				 '--validate',
				 '--existing', sourceSets.main.resources.srcDirs[0],
				 '--existing-mod', 'immersiveengineering'
			ideaModule project.name+".datagen"
			
			mods {
				immersivepetroleum {
					source sourceSets.main
					source sourceSets.datagen
				}
			}
		}
	}
}

repositories {
	maven {	name = "BlameJared";	url = "https://maven.blamejared.com/" }		 // IE & CT Files
	maven { name = "DVS1 Maven FS"; url = "https://dvs1.progwml6.com/files/maven" } // JEI & Tinkers Files
	maven { name = "CurseMaven";	url = 'https://cfa2.cursemaven.com' }		   // Needed for PNC
	maven { // CC-Tweaked
		url 'https://squiddev.cc/maven/'
		content {
			includeGroup 'org.squiddev'
		}
	}
	maven { url = "https://modmaven.dev/"}
	
	flatDir { dirs 'flatdir' }

}

dependencies {
	minecraft "net.minecraftforge:forge:${version_minecraft}-${version_forge}"
	
	implementation fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${version_ie}")
	//compile fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:1.18.1-7.1.0-145:api")
	datagenImplementation fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${version_ie}:datagen")

	// implementation fg.deobf("vazkii.patchouli:Patchouli:1.18.2-67")
	compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.19.2-77:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.19.2-77")
	// implementation fg.deobf("curse.maven:pneumaticcraft-repressurized-281849:3913972")
	// compileOnly fg.deobf("me.desht.pneumaticcraft:pneumaticcraft-repressurized:1.19.2-4.3.7-api")
	runtimeOnly fg.deobf("me.desht.pneumaticcraft:pneumaticcraft-repressurized:1.19.2-4.3.7")
	implementation fg.deobf("me.desht.pneumaticcraft:pneumaticcraft-repressurized:1.19.2-4.3.7")

	compileOnly(fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-1.19.2:${version_ct}"))
	// compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-1.18.2:${version_ct}")
	
	runtimeOnly fg.deobf("mezz.jei:jei-${version_minecraft}-common-api:${version_jei}")
	compileOnly fg.deobf("mezz.jei:jei-${version_minecraft}-forge-api:${version_jei}")
	implementation fg.deobf("mezz.jei:jei-${version_minecraft}-common-api:${version_jei}")
	
    compileOnly fg.deobf("org.squiddev:cc-tweaked-${version_minecraft}:${version_cctweaked}")
}

def customGradle = rootProject.file('custom.gradle');
if(customGradle.exists()){
	apply from: customGradle;
}

jar {
	manifest {
		attributes([
			"Specification-Title": "immersivepetroleum",
			"Specification-Vendor": "flaxbeard",
			"Specification-Version": "1",
			"Implementation-Title": project.name,
			"Implementation-Version": "${version}",
			"Implementation-Vendor" :"flaxbeard",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

// def reobfFile = file("$buildDir/reobfJar/output.jar")
// def reobfArtifact = artifacts.add('default', reobfFile){ type 'jar'; builtBy 'reobfJar'; }
jar.finalizedBy('reobfJar')

publishing {
	publications { mavenJava(MavenPublication){ artifact jar } }// reobfArtifact } }
	repositories { maven { url "file:///${project.projectDir}/mcmodsrepo" } }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
